// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MindOverMatter.Models.DbContexts;

namespace MindOverMatter.Migrations
{
    [DbContext(typeof(ChemicalDbContext))]
    [Migration("20191114053955_DropUnusedDbTables")]
    partial class DropUnusedDbTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MindOverMatter.Models.Matter.Atom", b =>
                {
                    b.Property<int>("AtomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BondPotential");

                    b.Property<string>("Name");

                    b.HasKey("AtomId");

                    b.ToTable("Atoms");

                    b.HasData(
                        new { AtomId = 1, BondPotential = 4, Name = "Carbon" },
                        new { AtomId = 2, BondPotential = 2, Name = "Oxygen" },
                        new { AtomId = 3, BondPotential = 3, Name = "Nitrogen" }
                    );
                });

            modelBuilder.Entity("MindOverMatter.Models.Matter.Molecule", b =>
                {
                    b.Property<int>("MoleculeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("MoleculeId");

                    b.ToTable("Molecules");
                });
#pragma warning restore 612, 618
        }
    }
}
